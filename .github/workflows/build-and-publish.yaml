name: build and publish docker image

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'tests'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'dev'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sustainable-action-foundation/eco-planner

jobs:
  tests:  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create test environment file
        run: |
          echo "DATABASE_URL=mysql://root:admin@db:3306/eco-planner" > .env
          echo "TEST_BASE_URL=http://web:3000" >> .env
          echo "IRON_SESSION_PASSWORD=mt6EAckefnuUpKKzLG7Rr8mQJVkmvJ3j" >> .env
          echo "NODE_ENV=test" >> .env
          echo "NEXTAUTH_URL=http://web:3000" >> .env
          echo "NEXTAUTH_SECRET=test-secret-key-for-github-actions" >> .env
      
      - name: Run tests with Docker Compose
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "compose.test.yaml"
          down-flags: "--volumes --remove-orphans"
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  build-and-publish:
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            GIT_LONG_HASH=${{ github.sha }}
            GIT_SHORT_HASH=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max