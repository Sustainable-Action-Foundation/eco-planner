name: build and publish docker image

on:
  push:
    branches:
      - 'main'
      - 'dev'
      # Temporary to test the workflow
      - 'tests'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'dev'
  workflow_dispatch:
    inputs:
      should_push:
        description: 'Should the image be pushed to the registry? (uses default tags for the branch)'
        required: false
        default: false
        type: boolean
      skip_tests:
        description: 'Skip tests?'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sustainable-action-foundation/eco-planner

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run tests
        if: ${{ !inputs.skip_tests }}
        env:
          TEST_BASE_URL: ${{ secrets.TEST_BASE_URL }}
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          TEST_IRON_SESSION_PASSWORD: ${{ secrets.TEST_IRON_SESSION_PASSWORD }}
          TEST_MAIL_HOST: ${{ secrets.TEST_MAIL_HOST }}
          TEST_MAIL_USER: ${{ secrets.TEST_MAIL_USER }}
          TEST_MAIL_PASSWORD: ${{ secrets.TEST_MAIL_PASSWORD }}
          TEST_MARIADB_DATABASE: ${{ secrets.TEST_MARIADB_DATABASE }}
          TEST_MARIADB_ROOT_PASSWORD: ${{ secrets.TEST_MARIADB_ROOT_PASSWORD }}
        run: |
          # Cache base images
          docker pull node:20-alpine || true
          docker pull mariadb:lts || true
          
          docker compose -f docker/compose.testing.yaml up --build

      - name: Extract test results from container
        if: always()
        run: |
          # Create results directory
          mkdir -p test-artifacts
          
          # Get the container ID
          CONTAINER_ID=$(docker compose -f docker/compose.testing.yaml ps -aq tests)
          
          if [ -n "$CONTAINER_ID" ]; then
            echo "Found tests container: $CONTAINER_ID"
            
            # Copy test files from the container
            docker cp ${CONTAINER_ID}:/testing/tests/reporter.log test-artifacts/ 2>/dev/null || echo "❌ reporter.log not found"            
          else
            echo "❌ Could not find tests container"
            echo "Available containers:"
            docker compose -f docker/compose.testing.yaml ps -a
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: test-artifacts/
          retention-days: 30
          if-no-files-found: warn

      - name: Setup docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && (github.event_name != 'workflow_dispatch' || inputs.should_push == true) }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/app.Dockerfile
          # Don't push on pull requests, or manual workflow dispatches without the `should_push` input set to true
          push: ${{ github.event_name != 'pull_request' && (github.event_name != 'workflow_dispatch' || inputs.should_push == true) }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            GIT_LONG_HASH=${{ github.sha }}
            GIT_SHORT_HASH=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max