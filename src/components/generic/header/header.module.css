/* Main sidebar */
.aside {
  --icon-min-width: 20px; /* TODO SIDENAV: Give better name, which icon? */ 
  --sidebar-padding: 1rem; /* TODO SIDENAV: rename, Techically also header padding */ 
  --sidebar-child-element-padding: .5rem;
  --sidebar-child-gap: var(--sidebar-child-element-padding);
  --sidebar-width: calc(
    var(--icon-min-width) +
    var(--sidebar-padding) * 2 + 
    var(--sidebar-child-element-padding) * 2 
  ); 

  --label-icon-width: 24px; /* TODO SIDENAV: rename, label-icon-size? */ 
  --label-padding: .25rem;
  --label-width: calc(
    var(--label-icon-width) + 
    var(--label-padding)
  );

  position: sticky;
  top: 0;
  height: 100dvh;
  border-right: 1px solid silver; 

  @media (max-width: 1250px) {
    height: unset;
    width: 100%;
    border-right: 0;
    border-bottom: 1px solid silver;
    background-color: rgba(255,255,255,.95);
    backdrop-filter: blur(2px);
    z-index: 8;
  }
}

/* Sidebar header (toggle open/closed) */
.aside > header {
  padding: var(--sidebar-padding);
}

.aside > header:first-of-type label { 
  padding: var(--label-padding);
  margin-left: calc(
    (
      (var(--sidebar-width) - (var(--sidebar-padding) * 2)) -
      (var(--label-icon-width) + (var(--label-padding) * 2)) 
    ) / 2
  ); 
  transition: background-color .1s ease;
  @media (max-width: 1250px) {
    z-index: 10;
  }
}

.aside > header:first-of-type label:hover {
  background-color: #e0e6eb;
}

/*
TODO SIDENAV: Checkbox keeps focus after pressing which is kinda annoying,
maybe replace checkbox with button or find a better way of doing this? 
.aside > header:first-of-type label:focus-within {
  outline: 1px solid black;
}
*/

.aside:has(.sidebar-toggle:checked) > .sidebar-menu {
  @media (min-width: 1251px) {
    width: initial;
  }

  @media (max-width: 1250px) {
    transform: translateX(-100%);
    display: none;
  }
} 

/* Sidebar menu (collection of action items such as links and buttons) */
.aside > .sidebar-menu {

  width: var(--sidebar-width);
  padding: var(--sidebar-padding);

  interpolate-size: allow-keywords;
  transition-property: width, transform, display; 

  transition-duration: .2s;
  transition-timing-function: ease-out;
  transition-behavior: allow-discrete;

  @media (max-width: 1250px) {
    transform: translateX(0);

    position: absolute;
    z-index: 9;
    top: 0;

    width: initial;
    height: 100dvh;
    border-right: 1px solid silver;
    background-color: white;

    padding-top: calc(
      var(--sidebar-padding) * 2 + 
      var(--label-icon-width) + 
      var(--label-padding) * 2 + 
      var(--sidebar-padding)
    ); 
    
    @starting-style { 
      transform: translateX(-100%);
    }
  }

  /* 
    TODO: Firefox is currently the only browser to not support transition-behavior: allow-discrete
    togheter with display: none; However as transition-behavior is still a supported property
    we cannot use a @support query. Thus we have this wonky fix which we can remove once firefox 
    supports transition-behavior fully.  
  */
  @-moz-document url-prefix() { 
    transition-property: width, display 
  }
}

/* Sidebar items */
.sidebar-menu > * > a,
.sidebar-menu > * > button {
  display: flex;
  align-items: center;
  gap: var(--sidebar-child-gap);
  width: 100%;
  padding: var(--sidebar-child-element-padding);
  padding-right: calc(
    var(--sidebar-child-element-padding) + 
    var(--sidebar-child-gap)
  ); 
  transition: background-color .1s ease, box-shadow .1s ease;
  text-decoration: none;
  overflow: hidden;
  white-space: nowrap;
  line-height: 1;
} 

.sidebar-menu a:not([href="/signup"]):hover,
.sidebar-menu button:hover {
  background-color: #e0e6eb;
  box-shadow: none; /* TODO: Might be good to remove box shadows from the semantic style sheet hover class so we don't need to constantly overwrite it */ 
}

.sidebar-menu > * > a[href="/signup"]:hover {
  box-shadow: inset 0 0 999px rgba(0, 0, 0, 0.1);
}

/* Prevent flexbox from resizing svg elements by setting min width of commonly used widths */ 
.aside svg[width="24"] {
  min-width: 24px;
}

.aside svg[width="20"] {
  min-width: 20px;
}

.aside svg[width="16"] {
  min-width: 16px;
}
